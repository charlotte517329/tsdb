// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net.proto

#ifndef PROTOBUF_net_2eproto__INCLUDED
#define PROTOBUF_net_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace MydataNet {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2eproto();
void protobuf_AssignDesc_net_2eproto();
void protobuf_ShutdownFile_net_2eproto();

class ConnectQuery;
class ConnectReply;

// ===================================================================

class ConnectQuery : public ::google::protobuf::Message {
 public:
  ConnectQuery();
  virtual ~ConnectQuery();

  ConnectQuery(const ConnectQuery& from);

  inline ConnectQuery& operator=(const ConnectQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectQuery& default_instance();

  void Swap(ConnectQuery* other);

  // implements Message ----------------------------------------------

  ConnectQuery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnectQuery& from);
  void MergeFrom(const ConnectQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 unused = 1;
  inline bool has_unused() const;
  inline void clear_unused();
  static const int kUnusedFieldNumber = 1;
  inline ::google::protobuf::int32 unused() const;
  inline void set_unused(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MydataNet.ConnectQuery)
 private:
  inline void set_has_unused();
  inline void clear_has_unused();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 unused_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_net_2eproto();
  friend void protobuf_AssignDesc_net_2eproto();
  friend void protobuf_ShutdownFile_net_2eproto();

  void InitAsDefaultInstance();
  static ConnectQuery* default_instance_;
};
// -------------------------------------------------------------------

class ConnectReply : public ::google::protobuf::Message {
 public:
  ConnectReply();
  virtual ~ConnectReply();

  ConnectReply(const ConnectReply& from);

  inline ConnectReply& operator=(const ConnectReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectReply& default_instance();

  void Swap(ConnectReply* other);

  // implements Message ----------------------------------------------

  ConnectReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnectReply& from);
  void MergeFrom(const ConnectReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 err = 2;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 2;
  inline ::google::protobuf::int32 err() const;
  inline void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MydataNet.ConnectReply)
 private:
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_net_2eproto();
  friend void protobuf_AssignDesc_net_2eproto();
  friend void protobuf_ShutdownFile_net_2eproto();

  void InitAsDefaultInstance();
  static ConnectReply* default_instance_;
};
// ===================================================================


// ===================================================================

// ConnectQuery

// required int32 unused = 1;
inline bool ConnectQuery::has_unused() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnectQuery::set_has_unused() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnectQuery::clear_has_unused() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnectQuery::clear_unused() {
  unused_ = 0;
  clear_has_unused();
}
inline ::google::protobuf::int32 ConnectQuery::unused() const {
  return unused_;
}
inline void ConnectQuery::set_unused(::google::protobuf::int32 value) {
  set_has_unused();
  unused_ = value;
}

// -------------------------------------------------------------------

// ConnectReply

// required int32 err = 2;
inline bool ConnectReply::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnectReply::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnectReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnectReply::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 ConnectReply::err() const {
  return err_;
}
inline void ConnectReply::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace MydataNet

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2eproto__INCLUDED
