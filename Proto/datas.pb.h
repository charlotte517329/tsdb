// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datas.proto

#ifndef PROTOBUF_datas_2eproto__INCLUDED
#define PROTOBUF_datas_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Datas {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_datas_2eproto();
void protobuf_AssignDesc_datas_2eproto();
void protobuf_ShutdownFile_datas_2eproto();

class DataInfo;
class WriteNewDatasQuery;
class WriteNewDatasQuery_WriteDataInfo;
class WriteNewDatasReply;
class ReadNewDatasQuery;
class ReadNewDatasReply;
class ReadDatasNumQuery;
class ReadDatasNumReply;
class ReadDatasQuery;
class ReadDatasReply;
class WriteOldDatasQuery;
class WriteOldDatasReply;
class RemoveDatasQuery;
class RemoveDatasReply;
class GetDataFileNumsQuery;
class GetDataFileNumsReply;
class DataFileInfosQuery;
class DataFileInfosReply;
class DataFileInfosReply_DataFileInfo;
class AddFileQuery;
class AddFileReply;
class CreateFileQuery;
class CreateFileReply;
class DeleteFileQuery;
class DeleteFileReply;
class RebuildIndexQuery;
class RebuildIndexReply;

// ===================================================================

class DataInfo : public ::google::protobuf::Message {
 public:
  DataInfo();
  virtual ~DataInfo();

  DataInfo(const DataInfo& from);

  inline DataInfo& operator=(const DataInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataInfo& default_instance();

  void Swap(DataInfo* other);

  // implements Message ----------------------------------------------

  DataInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataInfo& from);
  void MergeFrom(const DataInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 time_stamp = 1;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 1;
  inline ::google::protobuf::int64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::int64 value);

  // required bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Datas.DataInfo)
 private:
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 time_stamp_;
  ::std::string* data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static DataInfo* default_instance_;
};
// -------------------------------------------------------------------

class WriteNewDatasQuery_WriteDataInfo : public ::google::protobuf::Message {
 public:
  WriteNewDatasQuery_WriteDataInfo();
  virtual ~WriteNewDatasQuery_WriteDataInfo();

  WriteNewDatasQuery_WriteDataInfo(const WriteNewDatasQuery_WriteDataInfo& from);

  inline WriteNewDatasQuery_WriteDataInfo& operator=(const WriteNewDatasQuery_WriteDataInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteNewDatasQuery_WriteDataInfo& default_instance();

  void Swap(WriteNewDatasQuery_WriteDataInfo* other);

  // implements Message ----------------------------------------------

  WriteNewDatasQuery_WriteDataInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteNewDatasQuery_WriteDataInfo& from);
  void MergeFrom(const WriteNewDatasQuery_WriteDataInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int64 time_stamp = 2;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 2;
  inline ::google::protobuf::int64 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::int64 value);

  // required int64 table_id = 3;
  inline bool has_table_id() const;
  inline void clear_table_id();
  static const int kTableIdFieldNumber = 3;
  inline ::google::protobuf::int64 table_id() const;
  inline void set_table_id(::google::protobuf::int64 value);

  // required bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Datas.WriteNewDatasQuery.WriteDataInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();
  inline void set_has_table_id();
  inline void clear_has_table_id();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 time_stamp_;
  ::google::protobuf::int64 table_id_;
  ::std::string* data_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static WriteNewDatasQuery_WriteDataInfo* default_instance_;
};
// -------------------------------------------------------------------

class WriteNewDatasQuery : public ::google::protobuf::Message {
 public:
  WriteNewDatasQuery();
  virtual ~WriteNewDatasQuery();

  WriteNewDatasQuery(const WriteNewDatasQuery& from);

  inline WriteNewDatasQuery& operator=(const WriteNewDatasQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteNewDatasQuery& default_instance();

  void Swap(WriteNewDatasQuery* other);

  // implements Message ----------------------------------------------

  WriteNewDatasQuery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteNewDatasQuery& from);
  void MergeFrom(const WriteNewDatasQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef WriteNewDatasQuery_WriteDataInfo WriteDataInfo;

  // accessors -------------------------------------------------------

  // repeated .Datas.WriteNewDatasQuery.WriteDataInfo data_infos = 1;
  inline int data_infos_size() const;
  inline void clear_data_infos();
  static const int kDataInfosFieldNumber = 1;
  inline const ::Datas::WriteNewDatasQuery_WriteDataInfo& data_infos(int index) const;
  inline ::Datas::WriteNewDatasQuery_WriteDataInfo* mutable_data_infos(int index);
  inline ::Datas::WriteNewDatasQuery_WriteDataInfo* add_data_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::Datas::WriteNewDatasQuery_WriteDataInfo >&
      data_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::Datas::WriteNewDatasQuery_WriteDataInfo >*
      mutable_data_infos();

  // @@protoc_insertion_point(class_scope:Datas.WriteNewDatasQuery)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Datas::WriteNewDatasQuery_WriteDataInfo > data_infos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static WriteNewDatasQuery* default_instance_;
};
// -------------------------------------------------------------------

class WriteNewDatasReply : public ::google::protobuf::Message {
 public:
  WriteNewDatasReply();
  virtual ~WriteNewDatasReply();

  WriteNewDatasReply(const WriteNewDatasReply& from);

  inline WriteNewDatasReply& operator=(const WriteNewDatasReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteNewDatasReply& default_instance();

  void Swap(WriteNewDatasReply* other);

  // implements Message ----------------------------------------------

  WriteNewDatasReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteNewDatasReply& from);
  void MergeFrom(const WriteNewDatasReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 err = 1;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 1;
  inline ::google::protobuf::int32 err() const;
  inline void set_err(::google::protobuf::int32 value);

  // required int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Datas.WriteNewDatasReply)
 private:
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static WriteNewDatasReply* default_instance_;
};
// -------------------------------------------------------------------

class ReadNewDatasQuery : public ::google::protobuf::Message {
 public:
  ReadNewDatasQuery();
  virtual ~ReadNewDatasQuery();

  ReadNewDatasQuery(const ReadNewDatasQuery& from);

  inline ReadNewDatasQuery& operator=(const ReadNewDatasQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadNewDatasQuery& default_instance();

  void Swap(ReadNewDatasQuery* other);

  // implements Message ----------------------------------------------

  ReadNewDatasQuery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadNewDatasQuery& from);
  void MergeFrom(const ReadNewDatasQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 ids = 1;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 1;
  inline ::google::protobuf::int32 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::int32 value);
  inline void add_ids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ids();

  // @@protoc_insertion_point(class_scope:Datas.ReadNewDatasQuery)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static ReadNewDatasQuery* default_instance_;
};
// -------------------------------------------------------------------

class ReadNewDatasReply : public ::google::protobuf::Message {
 public:
  ReadNewDatasReply();
  virtual ~ReadNewDatasReply();

  ReadNewDatasReply(const ReadNewDatasReply& from);

  inline ReadNewDatasReply& operator=(const ReadNewDatasReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadNewDatasReply& default_instance();

  void Swap(ReadNewDatasReply* other);

  // implements Message ----------------------------------------------

  ReadNewDatasReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadNewDatasReply& from);
  void MergeFrom(const ReadNewDatasReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 err = 1;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 1;
  inline ::google::protobuf::int32 err() const;
  inline void set_err(::google::protobuf::int32 value);

  // repeated .Datas.DataInfo data_infos = 2;
  inline int data_infos_size() const;
  inline void clear_data_infos();
  static const int kDataInfosFieldNumber = 2;
  inline const ::Datas::DataInfo& data_infos(int index) const;
  inline ::Datas::DataInfo* mutable_data_infos(int index);
  inline ::Datas::DataInfo* add_data_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::Datas::DataInfo >&
      data_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::Datas::DataInfo >*
      mutable_data_infos();

  // required int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Datas.ReadNewDatasReply)
 private:
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Datas::DataInfo > data_infos_;
  ::google::protobuf::int32 err_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static ReadNewDatasReply* default_instance_;
};
// -------------------------------------------------------------------

class ReadDatasNumQuery : public ::google::protobuf::Message {
 public:
  ReadDatasNumQuery();
  virtual ~ReadDatasNumQuery();

  ReadDatasNumQuery(const ReadDatasNumQuery& from);

  inline ReadDatasNumQuery& operator=(const ReadDatasNumQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadDatasNumQuery& default_instance();

  void Swap(ReadDatasNumQuery* other);

  // implements Message ----------------------------------------------

  ReadDatasNumQuery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadDatasNumQuery& from);
  void MergeFrom(const ReadDatasNumQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int64 time_begin = 2;
  inline bool has_time_begin() const;
  inline void clear_time_begin();
  static const int kTimeBeginFieldNumber = 2;
  inline ::google::protobuf::int64 time_begin() const;
  inline void set_time_begin(::google::protobuf::int64 value);

  // required int64 time_end = 3;
  inline bool has_time_end() const;
  inline void clear_time_end();
  static const int kTimeEndFieldNumber = 3;
  inline ::google::protobuf::int64 time_end() const;
  inline void set_time_end(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Datas.ReadDatasNumQuery)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time_begin();
  inline void clear_has_time_begin();
  inline void set_has_time_end();
  inline void clear_has_time_end();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 time_begin_;
  ::google::protobuf::int64 time_end_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static ReadDatasNumQuery* default_instance_;
};
// -------------------------------------------------------------------

class ReadDatasNumReply : public ::google::protobuf::Message {
 public:
  ReadDatasNumReply();
  virtual ~ReadDatasNumReply();

  ReadDatasNumReply(const ReadDatasNumReply& from);

  inline ReadDatasNumReply& operator=(const ReadDatasNumReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadDatasNumReply& default_instance();

  void Swap(ReadDatasNumReply* other);

  // implements Message ----------------------------------------------

  ReadDatasNumReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadDatasNumReply& from);
  void MergeFrom(const ReadDatasNumReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 err = 1;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 1;
  inline ::google::protobuf::int32 err() const;
  inline void set_err(::google::protobuf::int32 value);

  // required int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Datas.ReadDatasNumReply)
 private:
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static ReadDatasNumReply* default_instance_;
};
// -------------------------------------------------------------------

class ReadDatasQuery : public ::google::protobuf::Message {
 public:
  ReadDatasQuery();
  virtual ~ReadDatasQuery();

  ReadDatasQuery(const ReadDatasQuery& from);

  inline ReadDatasQuery& operator=(const ReadDatasQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadDatasQuery& default_instance();

  void Swap(ReadDatasQuery* other);

  // implements Message ----------------------------------------------

  ReadDatasQuery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadDatasQuery& from);
  void MergeFrom(const ReadDatasQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int64 time_begin = 2;
  inline bool has_time_begin() const;
  inline void clear_time_begin();
  static const int kTimeBeginFieldNumber = 2;
  inline ::google::protobuf::int64 time_begin() const;
  inline void set_time_begin(::google::protobuf::int64 value);

  // required int64 time_end = 3;
  inline bool has_time_end() const;
  inline void clear_time_end();
  static const int kTimeEndFieldNumber = 3;
  inline ::google::protobuf::int64 time_end() const;
  inline void set_time_end(::google::protobuf::int64 value);

  // required int64 from_time = 4;
  inline bool has_from_time() const;
  inline void clear_from_time();
  static const int kFromTimeFieldNumber = 4;
  inline ::google::protobuf::int64 from_time() const;
  inline void set_from_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Datas.ReadDatasQuery)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_time_begin();
  inline void clear_has_time_begin();
  inline void set_has_time_end();
  inline void clear_has_time_end();
  inline void set_has_from_time();
  inline void clear_has_from_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 time_begin_;
  ::google::protobuf::int64 time_end_;
  ::google::protobuf::int64 from_time_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static ReadDatasQuery* default_instance_;
};
// -------------------------------------------------------------------

class ReadDatasReply : public ::google::protobuf::Message {
 public:
  ReadDatasReply();
  virtual ~ReadDatasReply();

  ReadDatasReply(const ReadDatasReply& from);

  inline ReadDatasReply& operator=(const ReadDatasReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadDatasReply& default_instance();

  void Swap(ReadDatasReply* other);

  // implements Message ----------------------------------------------

  ReadDatasReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadDatasReply& from);
  void MergeFrom(const ReadDatasReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 err = 1;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 1;
  inline ::google::protobuf::int32 err() const;
  inline void set_err(::google::protobuf::int32 value);

  // repeated .Datas.DataInfo data_infos = 2;
  inline int data_infos_size() const;
  inline void clear_data_infos();
  static const int kDataInfosFieldNumber = 2;
  inline const ::Datas::DataInfo& data_infos(int index) const;
  inline ::Datas::DataInfo* mutable_data_infos(int index);
  inline ::Datas::DataInfo* add_data_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::Datas::DataInfo >&
      data_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::Datas::DataInfo >*
      mutable_data_infos();

  // @@protoc_insertion_point(class_scope:Datas.ReadDatasReply)
 private:
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Datas::DataInfo > data_infos_;
  ::google::protobuf::int32 err_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static ReadDatasReply* default_instance_;
};
// -------------------------------------------------------------------

class WriteOldDatasQuery : public ::google::protobuf::Message {
 public:
  WriteOldDatasQuery();
  virtual ~WriteOldDatasQuery();

  WriteOldDatasQuery(const WriteOldDatasQuery& from);

  inline WriteOldDatasQuery& operator=(const WriteOldDatasQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteOldDatasQuery& default_instance();

  void Swap(WriteOldDatasQuery* other);

  // implements Message ----------------------------------------------

  WriteOldDatasQuery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteOldDatasQuery& from);
  void MergeFrom(const WriteOldDatasQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated .Datas.DataInfo data_infos = 2;
  inline int data_infos_size() const;
  inline void clear_data_infos();
  static const int kDataInfosFieldNumber = 2;
  inline const ::Datas::DataInfo& data_infos(int index) const;
  inline ::Datas::DataInfo* mutable_data_infos(int index);
  inline ::Datas::DataInfo* add_data_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::Datas::DataInfo >&
      data_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::Datas::DataInfo >*
      mutable_data_infos();

  // @@protoc_insertion_point(class_scope:Datas.WriteOldDatasQuery)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Datas::DataInfo > data_infos_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static WriteOldDatasQuery* default_instance_;
};
// -------------------------------------------------------------------

class WriteOldDatasReply : public ::google::protobuf::Message {
 public:
  WriteOldDatasReply();
  virtual ~WriteOldDatasReply();

  WriteOldDatasReply(const WriteOldDatasReply& from);

  inline WriteOldDatasReply& operator=(const WriteOldDatasReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteOldDatasReply& default_instance();

  void Swap(WriteOldDatasReply* other);

  // implements Message ----------------------------------------------

  WriteOldDatasReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteOldDatasReply& from);
  void MergeFrom(const WriteOldDatasReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 err = 1;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 1;
  inline ::google::protobuf::int32 err() const;
  inline void set_err(::google::protobuf::int32 value);

  // required int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Datas.WriteOldDatasReply)
 private:
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static WriteOldDatasReply* default_instance_;
};
// -------------------------------------------------------------------

class RemoveDatasQuery : public ::google::protobuf::Message {
 public:
  RemoveDatasQuery();
  virtual ~RemoveDatasQuery();

  RemoveDatasQuery(const RemoveDatasQuery& from);

  inline RemoveDatasQuery& operator=(const RemoveDatasQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveDatasQuery& default_instance();

  void Swap(RemoveDatasQuery* other);

  // implements Message ----------------------------------------------

  RemoveDatasQuery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveDatasQuery& from);
  void MergeFrom(const RemoveDatasQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // repeated int64 time_stamps = 2;
  inline int time_stamps_size() const;
  inline void clear_time_stamps();
  static const int kTimeStampsFieldNumber = 2;
  inline ::google::protobuf::int64 time_stamps(int index) const;
  inline void set_time_stamps(int index, ::google::protobuf::int64 value);
  inline void add_time_stamps(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      time_stamps() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_time_stamps();

  // @@protoc_insertion_point(class_scope:Datas.RemoveDatasQuery)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > time_stamps_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static RemoveDatasQuery* default_instance_;
};
// -------------------------------------------------------------------

class RemoveDatasReply : public ::google::protobuf::Message {
 public:
  RemoveDatasReply();
  virtual ~RemoveDatasReply();

  RemoveDatasReply(const RemoveDatasReply& from);

  inline RemoveDatasReply& operator=(const RemoveDatasReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveDatasReply& default_instance();

  void Swap(RemoveDatasReply* other);

  // implements Message ----------------------------------------------

  RemoveDatasReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveDatasReply& from);
  void MergeFrom(const RemoveDatasReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 err = 1;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 1;
  inline ::google::protobuf::int32 err() const;
  inline void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Datas.RemoveDatasReply)
 private:
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static RemoveDatasReply* default_instance_;
};
// -------------------------------------------------------------------

class GetDataFileNumsQuery : public ::google::protobuf::Message {
 public:
  GetDataFileNumsQuery();
  virtual ~GetDataFileNumsQuery();

  GetDataFileNumsQuery(const GetDataFileNumsQuery& from);

  inline GetDataFileNumsQuery& operator=(const GetDataFileNumsQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDataFileNumsQuery& default_instance();

  void Swap(GetDataFileNumsQuery* other);

  // implements Message ----------------------------------------------

  GetDataFileNumsQuery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDataFileNumsQuery& from);
  void MergeFrom(const GetDataFileNumsQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 unused = 1;
  inline bool has_unused() const;
  inline void clear_unused();
  static const int kUnusedFieldNumber = 1;
  inline ::google::protobuf::int32 unused() const;
  inline void set_unused(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Datas.GetDataFileNumsQuery)
 private:
  inline void set_has_unused();
  inline void clear_has_unused();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 unused_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static GetDataFileNumsQuery* default_instance_;
};
// -------------------------------------------------------------------

class GetDataFileNumsReply : public ::google::protobuf::Message {
 public:
  GetDataFileNumsReply();
  virtual ~GetDataFileNumsReply();

  GetDataFileNumsReply(const GetDataFileNumsReply& from);

  inline GetDataFileNumsReply& operator=(const GetDataFileNumsReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDataFileNumsReply& default_instance();

  void Swap(GetDataFileNumsReply* other);

  // implements Message ----------------------------------------------

  GetDataFileNumsReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDataFileNumsReply& from);
  void MergeFrom(const GetDataFileNumsReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 err = 1;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 1;
  inline ::google::protobuf::int32 err() const;
  inline void set_err(::google::protobuf::int32 value);

  // optional int32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Datas.GetDataFileNumsReply)
 private:
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_;
  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static GetDataFileNumsReply* default_instance_;
};
// -------------------------------------------------------------------

class DataFileInfosQuery : public ::google::protobuf::Message {
 public:
  DataFileInfosQuery();
  virtual ~DataFileInfosQuery();

  DataFileInfosQuery(const DataFileInfosQuery& from);

  inline DataFileInfosQuery& operator=(const DataFileInfosQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataFileInfosQuery& default_instance();

  void Swap(DataFileInfosQuery* other);

  // implements Message ----------------------------------------------

  DataFileInfosQuery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataFileInfosQuery& from);
  void MergeFrom(const DataFileInfosQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Datas.DataFileInfosQuery)
 private:
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static DataFileInfosQuery* default_instance_;
};
// -------------------------------------------------------------------

class DataFileInfosReply_DataFileInfo : public ::google::protobuf::Message {
 public:
  DataFileInfosReply_DataFileInfo();
  virtual ~DataFileInfosReply_DataFileInfo();

  DataFileInfosReply_DataFileInfo(const DataFileInfosReply_DataFileInfo& from);

  inline DataFileInfosReply_DataFileInfo& operator=(const DataFileInfosReply_DataFileInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataFileInfosReply_DataFileInfo& default_instance();

  void Swap(DataFileInfosReply_DataFileInfo* other);

  // implements Message ----------------------------------------------

  DataFileInfosReply_DataFileInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataFileInfosReply_DataFileInfo& from);
  void MergeFrom(const DataFileInfosReply_DataFileInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float using_rate = 1;
  inline bool has_using_rate() const;
  inline void clear_using_rate();
  static const int kUsingRateFieldNumber = 1;
  inline float using_rate() const;
  inline void set_using_rate(float value);

  // required int64 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::int64 size() const;
  inline void set_size(::google::protobuf::int64 value);

  // required int64 start_time = 3;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 3;
  inline ::google::protobuf::int64 start_time() const;
  inline void set_start_time(::google::protobuf::int64 value);

  // required int64 end_time = 4;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 end_time() const;
  inline void set_end_time(::google::protobuf::int64 value);

  // required bytes name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Datas.DataFileInfosReply.DataFileInfo)
 private:
  inline void set_has_using_rate();
  inline void clear_has_using_rate();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 size_;
  ::google::protobuf::int64 start_time_;
  ::google::protobuf::int64 end_time_;
  ::std::string* name_;
  float using_rate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static DataFileInfosReply_DataFileInfo* default_instance_;
};
// -------------------------------------------------------------------

class DataFileInfosReply : public ::google::protobuf::Message {
 public:
  DataFileInfosReply();
  virtual ~DataFileInfosReply();

  DataFileInfosReply(const DataFileInfosReply& from);

  inline DataFileInfosReply& operator=(const DataFileInfosReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataFileInfosReply& default_instance();

  void Swap(DataFileInfosReply* other);

  // implements Message ----------------------------------------------

  DataFileInfosReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataFileInfosReply& from);
  void MergeFrom(const DataFileInfosReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DataFileInfosReply_DataFileInfo DataFileInfo;

  // accessors -------------------------------------------------------

  // required int32 err = 1;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 1;
  inline ::google::protobuf::int32 err() const;
  inline void set_err(::google::protobuf::int32 value);

  // repeated .Datas.DataFileInfosReply.DataFileInfo data_file_infos = 2;
  inline int data_file_infos_size() const;
  inline void clear_data_file_infos();
  static const int kDataFileInfosFieldNumber = 2;
  inline const ::Datas::DataFileInfosReply_DataFileInfo& data_file_infos(int index) const;
  inline ::Datas::DataFileInfosReply_DataFileInfo* mutable_data_file_infos(int index);
  inline ::Datas::DataFileInfosReply_DataFileInfo* add_data_file_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::Datas::DataFileInfosReply_DataFileInfo >&
      data_file_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::Datas::DataFileInfosReply_DataFileInfo >*
      mutable_data_file_infos();

  // @@protoc_insertion_point(class_scope:Datas.DataFileInfosReply)
 private:
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Datas::DataFileInfosReply_DataFileInfo > data_file_infos_;
  ::google::protobuf::int32 err_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static DataFileInfosReply* default_instance_;
};
// -------------------------------------------------------------------

class AddFileQuery : public ::google::protobuf::Message {
 public:
  AddFileQuery();
  virtual ~AddFileQuery();

  AddFileQuery(const AddFileQuery& from);

  inline AddFileQuery& operator=(const AddFileQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFileQuery& default_instance();

  void Swap(AddFileQuery* other);

  // implements Message ----------------------------------------------

  AddFileQuery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddFileQuery& from);
  void MergeFrom(const AddFileQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes filename = 1;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFilenameFieldNumber = 1;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const void* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // @@protoc_insertion_point(class_scope:Datas.AddFileQuery)
 private:
  inline void set_has_filename();
  inline void clear_has_filename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* filename_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static AddFileQuery* default_instance_;
};
// -------------------------------------------------------------------

class AddFileReply : public ::google::protobuf::Message {
 public:
  AddFileReply();
  virtual ~AddFileReply();

  AddFileReply(const AddFileReply& from);

  inline AddFileReply& operator=(const AddFileReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFileReply& default_instance();

  void Swap(AddFileReply* other);

  // implements Message ----------------------------------------------

  AddFileReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddFileReply& from);
  void MergeFrom(const AddFileReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 err = 1;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 1;
  inline ::google::protobuf::int32 err() const;
  inline void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Datas.AddFileReply)
 private:
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static AddFileReply* default_instance_;
};
// -------------------------------------------------------------------

class CreateFileQuery : public ::google::protobuf::Message {
 public:
  CreateFileQuery();
  virtual ~CreateFileQuery();

  CreateFileQuery(const CreateFileQuery& from);

  inline CreateFileQuery& operator=(const CreateFileQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateFileQuery& default_instance();

  void Swap(CreateFileQuery* other);

  // implements Message ----------------------------------------------

  CreateFileQuery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateFileQuery& from);
  void MergeFrom(const CreateFileQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes filename = 1;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFilenameFieldNumber = 1;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const void* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // required int64 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::int64 size() const;
  inline void set_size(::google::protobuf::int64 value);

  // required int64 start_time = 3;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 3;
  inline ::google::protobuf::int64 start_time() const;
  inline void set_start_time(::google::protobuf::int64 value);

  // required int64 end_time = 4;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::int64 end_time() const;
  inline void set_end_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Datas.CreateFileQuery)
 private:
  inline void set_has_filename();
  inline void clear_has_filename();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* filename_;
  ::google::protobuf::int64 size_;
  ::google::protobuf::int64 start_time_;
  ::google::protobuf::int64 end_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static CreateFileQuery* default_instance_;
};
// -------------------------------------------------------------------

class CreateFileReply : public ::google::protobuf::Message {
 public:
  CreateFileReply();
  virtual ~CreateFileReply();

  CreateFileReply(const CreateFileReply& from);

  inline CreateFileReply& operator=(const CreateFileReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateFileReply& default_instance();

  void Swap(CreateFileReply* other);

  // implements Message ----------------------------------------------

  CreateFileReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateFileReply& from);
  void MergeFrom(const CreateFileReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 err = 1;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 1;
  inline ::google::protobuf::int32 err() const;
  inline void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Datas.CreateFileReply)
 private:
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static CreateFileReply* default_instance_;
};
// -------------------------------------------------------------------

class DeleteFileQuery : public ::google::protobuf::Message {
 public:
  DeleteFileQuery();
  virtual ~DeleteFileQuery();

  DeleteFileQuery(const DeleteFileQuery& from);

  inline DeleteFileQuery& operator=(const DeleteFileQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteFileQuery& default_instance();

  void Swap(DeleteFileQuery* other);

  // implements Message ----------------------------------------------

  DeleteFileQuery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteFileQuery& from);
  void MergeFrom(const DeleteFileQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 start_time = 1;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 1;
  inline ::google::protobuf::int64 start_time() const;
  inline void set_start_time(::google::protobuf::int64 value);

  // required bytes file_name = 2;
  inline bool has_file_name() const;
  inline void clear_file_name();
  static const int kFileNameFieldNumber = 2;
  inline const ::std::string& file_name() const;
  inline void set_file_name(const ::std::string& value);
  inline void set_file_name(const char* value);
  inline void set_file_name(const void* value, size_t size);
  inline ::std::string* mutable_file_name();
  inline ::std::string* release_file_name();
  inline void set_allocated_file_name(::std::string* file_name);

  // @@protoc_insertion_point(class_scope:Datas.DeleteFileQuery)
 private:
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_file_name();
  inline void clear_has_file_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 start_time_;
  ::std::string* file_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static DeleteFileQuery* default_instance_;
};
// -------------------------------------------------------------------

class DeleteFileReply : public ::google::protobuf::Message {
 public:
  DeleteFileReply();
  virtual ~DeleteFileReply();

  DeleteFileReply(const DeleteFileReply& from);

  inline DeleteFileReply& operator=(const DeleteFileReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteFileReply& default_instance();

  void Swap(DeleteFileReply* other);

  // implements Message ----------------------------------------------

  DeleteFileReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteFileReply& from);
  void MergeFrom(const DeleteFileReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 err = 1;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 1;
  inline ::google::protobuf::int32 err() const;
  inline void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Datas.DeleteFileReply)
 private:
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static DeleteFileReply* default_instance_;
};
// -------------------------------------------------------------------

class RebuildIndexQuery : public ::google::protobuf::Message {
 public:
  RebuildIndexQuery();
  virtual ~RebuildIndexQuery();

  RebuildIndexQuery(const RebuildIndexQuery& from);

  inline RebuildIndexQuery& operator=(const RebuildIndexQuery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RebuildIndexQuery& default_instance();

  void Swap(RebuildIndexQuery* other);

  // implements Message ----------------------------------------------

  RebuildIndexQuery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RebuildIndexQuery& from);
  void MergeFrom(const RebuildIndexQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes filename = 1;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFilenameFieldNumber = 1;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const void* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // required int64 start_time = 2;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  inline ::google::protobuf::int64 start_time() const;
  inline void set_start_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Datas.RebuildIndexQuery)
 private:
  inline void set_has_filename();
  inline void clear_has_filename();
  inline void set_has_start_time();
  inline void clear_has_start_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* filename_;
  ::google::protobuf::int64 start_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static RebuildIndexQuery* default_instance_;
};
// -------------------------------------------------------------------

class RebuildIndexReply : public ::google::protobuf::Message {
 public:
  RebuildIndexReply();
  virtual ~RebuildIndexReply();

  RebuildIndexReply(const RebuildIndexReply& from);

  inline RebuildIndexReply& operator=(const RebuildIndexReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RebuildIndexReply& default_instance();

  void Swap(RebuildIndexReply* other);

  // implements Message ----------------------------------------------

  RebuildIndexReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RebuildIndexReply& from);
  void MergeFrom(const RebuildIndexReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 err = 1;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 1;
  inline ::google::protobuf::int32 err() const;
  inline void set_err(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Datas.RebuildIndexReply)
 private:
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 err_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_datas_2eproto();
  friend void protobuf_AssignDesc_datas_2eproto();
  friend void protobuf_ShutdownFile_datas_2eproto();

  void InitAsDefaultInstance();
  static RebuildIndexReply* default_instance_;
};
// ===================================================================


// ===================================================================

// DataInfo

// required int64 time_stamp = 1;
inline bool DataInfo::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataInfo::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataInfo::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataInfo::clear_time_stamp() {
  time_stamp_ = GOOGLE_LONGLONG(0);
  clear_has_time_stamp();
}
inline ::google::protobuf::int64 DataInfo::time_stamp() const {
  return time_stamp_;
}
inline void DataInfo::set_time_stamp(::google::protobuf::int64 value) {
  set_has_time_stamp();
  time_stamp_ = value;
}

// required bytes data = 2;
inline bool DataInfo::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataInfo::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataInfo::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataInfo::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& DataInfo::data() const {
  return *data_;
}
inline void DataInfo::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void DataInfo::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void DataInfo::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataInfo::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* DataInfo::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataInfo::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// WriteNewDatasQuery_WriteDataInfo

// required int32 id = 1;
inline bool WriteNewDatasQuery_WriteDataInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WriteNewDatasQuery_WriteDataInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WriteNewDatasQuery_WriteDataInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WriteNewDatasQuery_WriteDataInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WriteNewDatasQuery_WriteDataInfo::id() const {
  return id_;
}
inline void WriteNewDatasQuery_WriteDataInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int64 time_stamp = 2;
inline bool WriteNewDatasQuery_WriteDataInfo::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WriteNewDatasQuery_WriteDataInfo::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WriteNewDatasQuery_WriteDataInfo::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WriteNewDatasQuery_WriteDataInfo::clear_time_stamp() {
  time_stamp_ = GOOGLE_LONGLONG(0);
  clear_has_time_stamp();
}
inline ::google::protobuf::int64 WriteNewDatasQuery_WriteDataInfo::time_stamp() const {
  return time_stamp_;
}
inline void WriteNewDatasQuery_WriteDataInfo::set_time_stamp(::google::protobuf::int64 value) {
  set_has_time_stamp();
  time_stamp_ = value;
}

// required int64 table_id = 3;
inline bool WriteNewDatasQuery_WriteDataInfo::has_table_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WriteNewDatasQuery_WriteDataInfo::set_has_table_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WriteNewDatasQuery_WriteDataInfo::clear_has_table_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WriteNewDatasQuery_WriteDataInfo::clear_table_id() {
  table_id_ = GOOGLE_LONGLONG(0);
  clear_has_table_id();
}
inline ::google::protobuf::int64 WriteNewDatasQuery_WriteDataInfo::table_id() const {
  return table_id_;
}
inline void WriteNewDatasQuery_WriteDataInfo::set_table_id(::google::protobuf::int64 value) {
  set_has_table_id();
  table_id_ = value;
}

// required bytes data = 4;
inline bool WriteNewDatasQuery_WriteDataInfo::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WriteNewDatasQuery_WriteDataInfo::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WriteNewDatasQuery_WriteDataInfo::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WriteNewDatasQuery_WriteDataInfo::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& WriteNewDatasQuery_WriteDataInfo::data() const {
  return *data_;
}
inline void WriteNewDatasQuery_WriteDataInfo::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void WriteNewDatasQuery_WriteDataInfo::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void WriteNewDatasQuery_WriteDataInfo::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WriteNewDatasQuery_WriteDataInfo::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* WriteNewDatasQuery_WriteDataInfo::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WriteNewDatasQuery_WriteDataInfo::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// WriteNewDatasQuery

// repeated .Datas.WriteNewDatasQuery.WriteDataInfo data_infos = 1;
inline int WriteNewDatasQuery::data_infos_size() const {
  return data_infos_.size();
}
inline void WriteNewDatasQuery::clear_data_infos() {
  data_infos_.Clear();
}
inline const ::Datas::WriteNewDatasQuery_WriteDataInfo& WriteNewDatasQuery::data_infos(int index) const {
  return data_infos_.Get(index);
}
inline ::Datas::WriteNewDatasQuery_WriteDataInfo* WriteNewDatasQuery::mutable_data_infos(int index) {
  return data_infos_.Mutable(index);
}
inline ::Datas::WriteNewDatasQuery_WriteDataInfo* WriteNewDatasQuery::add_data_infos() {
  return data_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Datas::WriteNewDatasQuery_WriteDataInfo >&
WriteNewDatasQuery::data_infos() const {
  return data_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::Datas::WriteNewDatasQuery_WriteDataInfo >*
WriteNewDatasQuery::mutable_data_infos() {
  return &data_infos_;
}

// -------------------------------------------------------------------

// WriteNewDatasReply

// required int32 err = 1;
inline bool WriteNewDatasReply::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WriteNewDatasReply::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WriteNewDatasReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WriteNewDatasReply::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 WriteNewDatasReply::err() const {
  return err_;
}
inline void WriteNewDatasReply::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
}

// required int32 num = 2;
inline bool WriteNewDatasReply::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WriteNewDatasReply::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WriteNewDatasReply::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WriteNewDatasReply::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 WriteNewDatasReply::num() const {
  return num_;
}
inline void WriteNewDatasReply::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// ReadNewDatasQuery

// repeated int32 ids = 1;
inline int ReadNewDatasQuery::ids_size() const {
  return ids_.size();
}
inline void ReadNewDatasQuery::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::int32 ReadNewDatasQuery::ids(int index) const {
  return ids_.Get(index);
}
inline void ReadNewDatasQuery::set_ids(int index, ::google::protobuf::int32 value) {
  ids_.Set(index, value);
}
inline void ReadNewDatasQuery::add_ids(::google::protobuf::int32 value) {
  ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ReadNewDatasQuery::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ReadNewDatasQuery::mutable_ids() {
  return &ids_;
}

// -------------------------------------------------------------------

// ReadNewDatasReply

// required int32 err = 1;
inline bool ReadNewDatasReply::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadNewDatasReply::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadNewDatasReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadNewDatasReply::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 ReadNewDatasReply::err() const {
  return err_;
}
inline void ReadNewDatasReply::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
}

// repeated .Datas.DataInfo data_infos = 2;
inline int ReadNewDatasReply::data_infos_size() const {
  return data_infos_.size();
}
inline void ReadNewDatasReply::clear_data_infos() {
  data_infos_.Clear();
}
inline const ::Datas::DataInfo& ReadNewDatasReply::data_infos(int index) const {
  return data_infos_.Get(index);
}
inline ::Datas::DataInfo* ReadNewDatasReply::mutable_data_infos(int index) {
  return data_infos_.Mutable(index);
}
inline ::Datas::DataInfo* ReadNewDatasReply::add_data_infos() {
  return data_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Datas::DataInfo >&
ReadNewDatasReply::data_infos() const {
  return data_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::Datas::DataInfo >*
ReadNewDatasReply::mutable_data_infos() {
  return &data_infos_;
}

// required int32 num = 3;
inline bool ReadNewDatasReply::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReadNewDatasReply::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReadNewDatasReply::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReadNewDatasReply::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 ReadNewDatasReply::num() const {
  return num_;
}
inline void ReadNewDatasReply::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// ReadDatasNumQuery

// required int32 id = 1;
inline bool ReadDatasNumQuery::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadDatasNumQuery::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadDatasNumQuery::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadDatasNumQuery::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ReadDatasNumQuery::id() const {
  return id_;
}
inline void ReadDatasNumQuery::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int64 time_begin = 2;
inline bool ReadDatasNumQuery::has_time_begin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReadDatasNumQuery::set_has_time_begin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReadDatasNumQuery::clear_has_time_begin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReadDatasNumQuery::clear_time_begin() {
  time_begin_ = GOOGLE_LONGLONG(0);
  clear_has_time_begin();
}
inline ::google::protobuf::int64 ReadDatasNumQuery::time_begin() const {
  return time_begin_;
}
inline void ReadDatasNumQuery::set_time_begin(::google::protobuf::int64 value) {
  set_has_time_begin();
  time_begin_ = value;
}

// required int64 time_end = 3;
inline bool ReadDatasNumQuery::has_time_end() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReadDatasNumQuery::set_has_time_end() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReadDatasNumQuery::clear_has_time_end() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReadDatasNumQuery::clear_time_end() {
  time_end_ = GOOGLE_LONGLONG(0);
  clear_has_time_end();
}
inline ::google::protobuf::int64 ReadDatasNumQuery::time_end() const {
  return time_end_;
}
inline void ReadDatasNumQuery::set_time_end(::google::protobuf::int64 value) {
  set_has_time_end();
  time_end_ = value;
}

// -------------------------------------------------------------------

// ReadDatasNumReply

// required int32 err = 1;
inline bool ReadDatasNumReply::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadDatasNumReply::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadDatasNumReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadDatasNumReply::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 ReadDatasNumReply::err() const {
  return err_;
}
inline void ReadDatasNumReply::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
}

// required int32 num = 2;
inline bool ReadDatasNumReply::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReadDatasNumReply::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReadDatasNumReply::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReadDatasNumReply::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 ReadDatasNumReply::num() const {
  return num_;
}
inline void ReadDatasNumReply::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// ReadDatasQuery

// required int32 id = 1;
inline bool ReadDatasQuery::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadDatasQuery::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadDatasQuery::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadDatasQuery::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ReadDatasQuery::id() const {
  return id_;
}
inline void ReadDatasQuery::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int64 time_begin = 2;
inline bool ReadDatasQuery::has_time_begin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReadDatasQuery::set_has_time_begin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReadDatasQuery::clear_has_time_begin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReadDatasQuery::clear_time_begin() {
  time_begin_ = GOOGLE_LONGLONG(0);
  clear_has_time_begin();
}
inline ::google::protobuf::int64 ReadDatasQuery::time_begin() const {
  return time_begin_;
}
inline void ReadDatasQuery::set_time_begin(::google::protobuf::int64 value) {
  set_has_time_begin();
  time_begin_ = value;
}

// required int64 time_end = 3;
inline bool ReadDatasQuery::has_time_end() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReadDatasQuery::set_has_time_end() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReadDatasQuery::clear_has_time_end() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReadDatasQuery::clear_time_end() {
  time_end_ = GOOGLE_LONGLONG(0);
  clear_has_time_end();
}
inline ::google::protobuf::int64 ReadDatasQuery::time_end() const {
  return time_end_;
}
inline void ReadDatasQuery::set_time_end(::google::protobuf::int64 value) {
  set_has_time_end();
  time_end_ = value;
}

// required int64 from_time = 4;
inline bool ReadDatasQuery::has_from_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReadDatasQuery::set_has_from_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReadDatasQuery::clear_has_from_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReadDatasQuery::clear_from_time() {
  from_time_ = GOOGLE_LONGLONG(0);
  clear_has_from_time();
}
inline ::google::protobuf::int64 ReadDatasQuery::from_time() const {
  return from_time_;
}
inline void ReadDatasQuery::set_from_time(::google::protobuf::int64 value) {
  set_has_from_time();
  from_time_ = value;
}

// -------------------------------------------------------------------

// ReadDatasReply

// required int32 err = 1;
inline bool ReadDatasReply::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadDatasReply::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadDatasReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadDatasReply::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 ReadDatasReply::err() const {
  return err_;
}
inline void ReadDatasReply::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
}

// repeated .Datas.DataInfo data_infos = 2;
inline int ReadDatasReply::data_infos_size() const {
  return data_infos_.size();
}
inline void ReadDatasReply::clear_data_infos() {
  data_infos_.Clear();
}
inline const ::Datas::DataInfo& ReadDatasReply::data_infos(int index) const {
  return data_infos_.Get(index);
}
inline ::Datas::DataInfo* ReadDatasReply::mutable_data_infos(int index) {
  return data_infos_.Mutable(index);
}
inline ::Datas::DataInfo* ReadDatasReply::add_data_infos() {
  return data_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Datas::DataInfo >&
ReadDatasReply::data_infos() const {
  return data_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::Datas::DataInfo >*
ReadDatasReply::mutable_data_infos() {
  return &data_infos_;
}

// -------------------------------------------------------------------

// WriteOldDatasQuery

// required int32 id = 1;
inline bool WriteOldDatasQuery::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WriteOldDatasQuery::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WriteOldDatasQuery::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WriteOldDatasQuery::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 WriteOldDatasQuery::id() const {
  return id_;
}
inline void WriteOldDatasQuery::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// repeated .Datas.DataInfo data_infos = 2;
inline int WriteOldDatasQuery::data_infos_size() const {
  return data_infos_.size();
}
inline void WriteOldDatasQuery::clear_data_infos() {
  data_infos_.Clear();
}
inline const ::Datas::DataInfo& WriteOldDatasQuery::data_infos(int index) const {
  return data_infos_.Get(index);
}
inline ::Datas::DataInfo* WriteOldDatasQuery::mutable_data_infos(int index) {
  return data_infos_.Mutable(index);
}
inline ::Datas::DataInfo* WriteOldDatasQuery::add_data_infos() {
  return data_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Datas::DataInfo >&
WriteOldDatasQuery::data_infos() const {
  return data_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::Datas::DataInfo >*
WriteOldDatasQuery::mutable_data_infos() {
  return &data_infos_;
}

// -------------------------------------------------------------------

// WriteOldDatasReply

// required int32 err = 1;
inline bool WriteOldDatasReply::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WriteOldDatasReply::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WriteOldDatasReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WriteOldDatasReply::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 WriteOldDatasReply::err() const {
  return err_;
}
inline void WriteOldDatasReply::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
}

// required int32 num = 2;
inline bool WriteOldDatasReply::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WriteOldDatasReply::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WriteOldDatasReply::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WriteOldDatasReply::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 WriteOldDatasReply::num() const {
  return num_;
}
inline void WriteOldDatasReply::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// RemoveDatasQuery

// required int32 id = 1;
inline bool RemoveDatasQuery::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveDatasQuery::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveDatasQuery::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveDatasQuery::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 RemoveDatasQuery::id() const {
  return id_;
}
inline void RemoveDatasQuery::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// repeated int64 time_stamps = 2;
inline int RemoveDatasQuery::time_stamps_size() const {
  return time_stamps_.size();
}
inline void RemoveDatasQuery::clear_time_stamps() {
  time_stamps_.Clear();
}
inline ::google::protobuf::int64 RemoveDatasQuery::time_stamps(int index) const {
  return time_stamps_.Get(index);
}
inline void RemoveDatasQuery::set_time_stamps(int index, ::google::protobuf::int64 value) {
  time_stamps_.Set(index, value);
}
inline void RemoveDatasQuery::add_time_stamps(::google::protobuf::int64 value) {
  time_stamps_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
RemoveDatasQuery::time_stamps() const {
  return time_stamps_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
RemoveDatasQuery::mutable_time_stamps() {
  return &time_stamps_;
}

// -------------------------------------------------------------------

// RemoveDatasReply

// required int32 err = 1;
inline bool RemoveDatasReply::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveDatasReply::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveDatasReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveDatasReply::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 RemoveDatasReply::err() const {
  return err_;
}
inline void RemoveDatasReply::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
}

// -------------------------------------------------------------------

// GetDataFileNumsQuery

// required int32 unused = 1;
inline bool GetDataFileNumsQuery::has_unused() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetDataFileNumsQuery::set_has_unused() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetDataFileNumsQuery::clear_has_unused() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetDataFileNumsQuery::clear_unused() {
  unused_ = 0;
  clear_has_unused();
}
inline ::google::protobuf::int32 GetDataFileNumsQuery::unused() const {
  return unused_;
}
inline void GetDataFileNumsQuery::set_unused(::google::protobuf::int32 value) {
  set_has_unused();
  unused_ = value;
}

// -------------------------------------------------------------------

// GetDataFileNumsReply

// required int32 err = 1;
inline bool GetDataFileNumsReply::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetDataFileNumsReply::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetDataFileNumsReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetDataFileNumsReply::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 GetDataFileNumsReply::err() const {
  return err_;
}
inline void GetDataFileNumsReply::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
}

// optional int32 num = 2;
inline bool GetDataFileNumsReply::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetDataFileNumsReply::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetDataFileNumsReply::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetDataFileNumsReply::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 GetDataFileNumsReply::num() const {
  return num_;
}
inline void GetDataFileNumsReply::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// DataFileInfosQuery

// required int32 num = 1;
inline bool DataFileInfosQuery::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataFileInfosQuery::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataFileInfosQuery::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataFileInfosQuery::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 DataFileInfosQuery::num() const {
  return num_;
}
inline void DataFileInfosQuery::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// DataFileInfosReply_DataFileInfo

// required float using_rate = 1;
inline bool DataFileInfosReply_DataFileInfo::has_using_rate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataFileInfosReply_DataFileInfo::set_has_using_rate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataFileInfosReply_DataFileInfo::clear_has_using_rate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataFileInfosReply_DataFileInfo::clear_using_rate() {
  using_rate_ = 0;
  clear_has_using_rate();
}
inline float DataFileInfosReply_DataFileInfo::using_rate() const {
  return using_rate_;
}
inline void DataFileInfosReply_DataFileInfo::set_using_rate(float value) {
  set_has_using_rate();
  using_rate_ = value;
}

// required int64 size = 2;
inline bool DataFileInfosReply_DataFileInfo::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataFileInfosReply_DataFileInfo::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataFileInfosReply_DataFileInfo::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataFileInfosReply_DataFileInfo::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::int64 DataFileInfosReply_DataFileInfo::size() const {
  return size_;
}
inline void DataFileInfosReply_DataFileInfo::set_size(::google::protobuf::int64 value) {
  set_has_size();
  size_ = value;
}

// required int64 start_time = 3;
inline bool DataFileInfosReply_DataFileInfo::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataFileInfosReply_DataFileInfo::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataFileInfosReply_DataFileInfo::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataFileInfosReply_DataFileInfo::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::int64 DataFileInfosReply_DataFileInfo::start_time() const {
  return start_time_;
}
inline void DataFileInfosReply_DataFileInfo::set_start_time(::google::protobuf::int64 value) {
  set_has_start_time();
  start_time_ = value;
}

// required int64 end_time = 4;
inline bool DataFileInfosReply_DataFileInfo::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DataFileInfosReply_DataFileInfo::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DataFileInfosReply_DataFileInfo::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DataFileInfosReply_DataFileInfo::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 DataFileInfosReply_DataFileInfo::end_time() const {
  return end_time_;
}
inline void DataFileInfosReply_DataFileInfo::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
}

// required bytes name = 5;
inline bool DataFileInfosReply_DataFileInfo::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DataFileInfosReply_DataFileInfo::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DataFileInfosReply_DataFileInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DataFileInfosReply_DataFileInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& DataFileInfosReply_DataFileInfo::name() const {
  return *name_;
}
inline void DataFileInfosReply_DataFileInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DataFileInfosReply_DataFileInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DataFileInfosReply_DataFileInfo::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DataFileInfosReply_DataFileInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* DataFileInfosReply_DataFileInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DataFileInfosReply_DataFileInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// DataFileInfosReply

// required int32 err = 1;
inline bool DataFileInfosReply::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataFileInfosReply::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataFileInfosReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataFileInfosReply::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 DataFileInfosReply::err() const {
  return err_;
}
inline void DataFileInfosReply::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
}

// repeated .Datas.DataFileInfosReply.DataFileInfo data_file_infos = 2;
inline int DataFileInfosReply::data_file_infos_size() const {
  return data_file_infos_.size();
}
inline void DataFileInfosReply::clear_data_file_infos() {
  data_file_infos_.Clear();
}
inline const ::Datas::DataFileInfosReply_DataFileInfo& DataFileInfosReply::data_file_infos(int index) const {
  return data_file_infos_.Get(index);
}
inline ::Datas::DataFileInfosReply_DataFileInfo* DataFileInfosReply::mutable_data_file_infos(int index) {
  return data_file_infos_.Mutable(index);
}
inline ::Datas::DataFileInfosReply_DataFileInfo* DataFileInfosReply::add_data_file_infos() {
  return data_file_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Datas::DataFileInfosReply_DataFileInfo >&
DataFileInfosReply::data_file_infos() const {
  return data_file_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::Datas::DataFileInfosReply_DataFileInfo >*
DataFileInfosReply::mutable_data_file_infos() {
  return &data_file_infos_;
}

// -------------------------------------------------------------------

// AddFileQuery

// required bytes filename = 1;
inline bool AddFileQuery::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFileQuery::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFileQuery::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFileQuery::clear_filename() {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& AddFileQuery::filename() const {
  return *filename_;
}
inline void AddFileQuery::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void AddFileQuery::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void AddFileQuery::set_filename(const void* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AddFileQuery::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  return filename_;
}
inline ::std::string* AddFileQuery::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AddFileQuery::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// AddFileReply

// required int32 err = 1;
inline bool AddFileReply::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFileReply::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFileReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFileReply::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 AddFileReply::err() const {
  return err_;
}
inline void AddFileReply::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
}

// -------------------------------------------------------------------

// CreateFileQuery

// required bytes filename = 1;
inline bool CreateFileQuery::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateFileQuery::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateFileQuery::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateFileQuery::clear_filename() {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& CreateFileQuery::filename() const {
  return *filename_;
}
inline void CreateFileQuery::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void CreateFileQuery::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void CreateFileQuery::set_filename(const void* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CreateFileQuery::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  return filename_;
}
inline ::std::string* CreateFileQuery::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CreateFileQuery::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 size = 2;
inline bool CreateFileQuery::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateFileQuery::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateFileQuery::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateFileQuery::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::int64 CreateFileQuery::size() const {
  return size_;
}
inline void CreateFileQuery::set_size(::google::protobuf::int64 value) {
  set_has_size();
  size_ = value;
}

// required int64 start_time = 3;
inline bool CreateFileQuery::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateFileQuery::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateFileQuery::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateFileQuery::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::int64 CreateFileQuery::start_time() const {
  return start_time_;
}
inline void CreateFileQuery::set_start_time(::google::protobuf::int64 value) {
  set_has_start_time();
  start_time_ = value;
}

// required int64 end_time = 4;
inline bool CreateFileQuery::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateFileQuery::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateFileQuery::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateFileQuery::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 CreateFileQuery::end_time() const {
  return end_time_;
}
inline void CreateFileQuery::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
}

// -------------------------------------------------------------------

// CreateFileReply

// required int32 err = 1;
inline bool CreateFileReply::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateFileReply::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateFileReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateFileReply::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 CreateFileReply::err() const {
  return err_;
}
inline void CreateFileReply::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
}

// -------------------------------------------------------------------

// DeleteFileQuery

// required int64 start_time = 1;
inline bool DeleteFileQuery::has_start_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteFileQuery::set_has_start_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteFileQuery::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteFileQuery::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::int64 DeleteFileQuery::start_time() const {
  return start_time_;
}
inline void DeleteFileQuery::set_start_time(::google::protobuf::int64 value) {
  set_has_start_time();
  start_time_ = value;
}

// required bytes file_name = 2;
inline bool DeleteFileQuery::has_file_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteFileQuery::set_has_file_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteFileQuery::clear_has_file_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteFileQuery::clear_file_name() {
  if (file_name_ != &::google::protobuf::internal::kEmptyString) {
    file_name_->clear();
  }
  clear_has_file_name();
}
inline const ::std::string& DeleteFileQuery::file_name() const {
  return *file_name_;
}
inline void DeleteFileQuery::set_file_name(const ::std::string& value) {
  set_has_file_name();
  if (file_name_ == &::google::protobuf::internal::kEmptyString) {
    file_name_ = new ::std::string;
  }
  file_name_->assign(value);
}
inline void DeleteFileQuery::set_file_name(const char* value) {
  set_has_file_name();
  if (file_name_ == &::google::protobuf::internal::kEmptyString) {
    file_name_ = new ::std::string;
  }
  file_name_->assign(value);
}
inline void DeleteFileQuery::set_file_name(const void* value, size_t size) {
  set_has_file_name();
  if (file_name_ == &::google::protobuf::internal::kEmptyString) {
    file_name_ = new ::std::string;
  }
  file_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DeleteFileQuery::mutable_file_name() {
  set_has_file_name();
  if (file_name_ == &::google::protobuf::internal::kEmptyString) {
    file_name_ = new ::std::string;
  }
  return file_name_;
}
inline ::std::string* DeleteFileQuery::release_file_name() {
  clear_has_file_name();
  if (file_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = file_name_;
    file_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DeleteFileQuery::set_allocated_file_name(::std::string* file_name) {
  if (file_name_ != &::google::protobuf::internal::kEmptyString) {
    delete file_name_;
  }
  if (file_name) {
    set_has_file_name();
    file_name_ = file_name;
  } else {
    clear_has_file_name();
    file_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// DeleteFileReply

// required int32 err = 1;
inline bool DeleteFileReply::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteFileReply::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteFileReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteFileReply::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 DeleteFileReply::err() const {
  return err_;
}
inline void DeleteFileReply::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
}

// -------------------------------------------------------------------

// RebuildIndexQuery

// required bytes filename = 1;
inline bool RebuildIndexQuery::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RebuildIndexQuery::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RebuildIndexQuery::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RebuildIndexQuery::clear_filename() {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& RebuildIndexQuery::filename() const {
  return *filename_;
}
inline void RebuildIndexQuery::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void RebuildIndexQuery::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void RebuildIndexQuery::set_filename(const void* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RebuildIndexQuery::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  return filename_;
}
inline ::std::string* RebuildIndexQuery::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RebuildIndexQuery::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int64 start_time = 2;
inline bool RebuildIndexQuery::has_start_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RebuildIndexQuery::set_has_start_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RebuildIndexQuery::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RebuildIndexQuery::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::int64 RebuildIndexQuery::start_time() const {
  return start_time_;
}
inline void RebuildIndexQuery::set_start_time(::google::protobuf::int64 value) {
  set_has_start_time();
  start_time_ = value;
}

// -------------------------------------------------------------------

// RebuildIndexReply

// required int32 err = 1;
inline bool RebuildIndexReply::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RebuildIndexReply::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RebuildIndexReply::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RebuildIndexReply::clear_err() {
  err_ = 0;
  clear_has_err();
}
inline ::google::protobuf::int32 RebuildIndexReply::err() const {
  return err_;
}
inline void RebuildIndexReply::set_err(::google::protobuf::int32 value) {
  set_has_err();
  err_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Datas

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_datas_2eproto__INCLUDED
